name: Build and Release

on:
  push:
    tags:
      - "v*" # Запускается при пуше тега v0.3.2, v1.0.0 и т.д.
  workflow_dispatch: # Можно запускать вручную

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm i
        
      - name: Build Electron app (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          npm run dist:win
        
      - name: Build Electron app (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          npm run dist:linux
          ./prepare_release.sh
        
      - name: Build Electron app (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          npm run dist:mac

      - name: Upload to GitHub Release (Windows)
        if: matrix.os == 'windows-latest'
        uses: softprops/action-gh-release@v2
        with:
          files: dist/*.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload to GitHub Release (Linux)
        if: matrix.os == 'ubuntu-latest'
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/*.AppImage
            dist-full.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload to GitHub Release (macOS)
        if: matrix.os == 'macos-latest'
        uses: softprops/action-gh-release@v2
        with:
          files: dist/*.dmg
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update PKGBUILD version
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "Building version $VERSION"
          sed -i "s/^pkgver=.*/pkgver=$VERSION/" PKGBUILD

      - name: Publish AUR package
        if: matrix.os == 'ubuntu-latest'
        uses: KSXGitHub/github-actions-deploy-aur@<TAG>
        with:
          pkgname: aniparser
          pkgbuild: ./PKGBUILD
          updpkgsums: true
          commit_username: ${{ secrets.AUR_USERNAME }}
          commit_email: ${{ secrets.AUR_EMAIL }}
          ssh_private_key: ${{ secrets.AUR_SSH_PRIVATE_KEY }}
          commit_message: Update AUR package
          ssh_keyscan_types: rsa,ecdsa,ed25519
